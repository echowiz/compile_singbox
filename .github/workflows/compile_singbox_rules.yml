name: Compile and Release Sing-box Rules

on:
  schedule:
    - cron: '0 * * * *' # 每小时触发一次
  workflow_dispatch: # 手动触发

jobs:
  compile_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Download list files and convert
        id: download_files
        run: |
          DIRECT_URL="https://gist.githubusercontent.com/echowiz/f51837ac7525a75383c48275b9f4f692/raw/direct.list"
          PROXY_URL="https://gist.githubusercontent.com/echowiz/f51837ac7525a75383c48275b9f4f692/raw/proxy.list"
          
          # 下载 list 文件
          curl -s "$DIRECT_URL" -o direct.list
          curl -s "$PROXY_URL" -o proxy.list
          
          # 转换为 JSON
          python txt2json.py direct.list direct.json
          python txt2json.py proxy.list proxy.json
          
          # 生成校验内容
          DIRECT_CONTENT=$(cat direct.json | base64 -w 0)
          PROXY_CONTENT=$(cat proxy.json | base64 -w 0)
          
          echo "direct_content=$DIRECT_CONTENT" >> "$GITHUB_OUTPUT"
          echo "proxy_content=$PROXY_CONTENT" >> "$GITHUB_OUTPUT"

      - name: Check for file changes
        id: check_changes
        run: |
          PREVIOUS_DIRECT_CONTENT=$(cat previous_direct.txt | sed '$s/.$//' || echo "")
          PREVIOUS_PROXY_CONTENT=$(cat previous_proxy.txt | sed '$s/.$//' || echo "")
          CURRENT_DIRECT_CONTENT="${{ steps.download_files.outputs.direct_content }}"
          CURRENT_PROXY_CONTENT="${{ steps.download_files.outputs.proxy_content }}"
          
          if [[ "$(echo "$PREVIOUS_DIRECT_CONTENT" | base64 -d)" != "$(echo "$CURRENT_DIRECT_CONTENT" | base64 -d)" || "$(echo "$PREVIOUS_PROXY_CONTENT" | base64 -d)" != "$(echo "$CURRENT_PROXY_CONTENT" | base64 -d)" ]]; then
            echo "files_changed=true"  >> $GITHUB_OUTPUT
          else
            echo "files_changed=false"  >> $GITHUB_OUTPUT
            echo "No changes detected, skipping compilation."
          fi

          echo "${CURRENT_DIRECT_CONTENT}" | base64 -d > previous_direct.txt
          echo "${CURRENT_PROXY_CONTENT}" | base64 -d > previous_proxy.txt

      - name: Download latest sing-box
        if: steps.check_changes.outputs.files_changed == 'true'
        run: |
          # 获取最新版本的下载链接
          LATEST_RELEASE_URL=$(curl -s "https://api.github.com/repos/SagerNet/sing-box/releases/latest" | \
            jq -r '.assets[] | select(.name | endswith("-linux-amd64.tar.gz")) | .browser_download_url')
          
          if [ -z "$LATEST_RELEASE_URL" ]; then
            echo "Error: Failed to get download URL"
            exit 1
          fi
          
          echo "Downloading from: $LATEST_RELEASE_URL"
          wget -q "$LATEST_RELEASE_URL" -O sing-box.tar.gz
          
          if [ ! -f sing-box.tar.gz ]; then
            echo "Error: Failed to download sing-box"
            exit 1
          fi
          
          # 解压并列出文件内容
          echo "Extracting archive..."
          tar -tvf sing-box.tar.gz
          
          # 解压所有文件
          tar -xzf sing-box.tar.gz
          
          # 查找并移动 sing-box 可执行文件
          find . -name "sing-box" -type f -exec mv {} . \;
          chmod +x sing-box
          
          # 清理
          rm sing-box.tar.gz

      - name: Compile rule-set
        if: steps.check_changes.outputs.files_changed == 'true'
        run: |
          ./sing-box rule-set compile --output direct.srs direct.json
          ./sing-box rule-set compile --output proxy.srs proxy.json

      - name: Create Release
        if: steps.check_changes.outputs.files_changed == 'true'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}  # 改用自定义 token
        with:
          tag_name: ${{ github.run_id }}
          release_name: Release ${{ github.run_id }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        if: steps.check_changes.outputs.files_changed == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}  # 这里也需要改
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: direct.srs
          asset_name: direct.srs
          asset_content_type: application/octet-stream

      - name: Upload Release Assets
        if: steps.check_changes.outputs.files_changed == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}  # 这里也需要改
        with:
           upload_url: ${{ steps.create_release.outputs.upload_url }}
           asset_path: proxy.srs
           asset_name: proxy.srs
           asset_content_type: application/octet-stream